Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./DCMotor_prog.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./DCMotor_prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DCMotor_prog.o
LOAD ./DIO_prog.o
LOAD ./Main.o
LOAD ./PWM_prog.o
LOAD ./TACTILE_prog.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x94a
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DCMotor_prog.o
 .text          0x00000092        0x0 ./DIO_prog.o
 .text          0x00000092        0x0 ./Main.o
 .text          0x00000092        0x0 ./PWM_prog.o
 .text          0x00000092        0x0 ./TACTILE_prog.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DCMotor_voidInit
                0x00000092       0x26 ./DCMotor_prog.o
                0x00000092                DCMotor_voidInit
 .text.DCMotor_voidOn
                0x000000b8       0x22 ./DCMotor_prog.o
                0x000000b8                DCMotor_voidOn
 .text.DCMotor_voidOff
                0x000000da       0x14 ./DCMotor_prog.o
                0x000000da                DCMotor_voidOff
 .text.DCMotor_voidChangeSpeed
                0x000000ee       0x2e ./DCMotor_prog.o
                0x000000ee                DCMotor_voidChangeSpeed
 .text.DIO_u8ReadPortVal
                0x0000011c       0x4e ./DIO_prog.o
                0x0000011c                DIO_u8ReadPortVal
 .text.DIO_u8WritePortVal
                0x0000016a       0x46 ./DIO_prog.o
                0x0000016a                DIO_u8WritePortVal
 .text.DIO_u8WritePortDir
                0x000001b0       0x46 ./DIO_prog.o
                0x000001b0                DIO_u8WritePortDir
 .text.DIO_u8ReadPortDir
                0x000001f6       0x4e ./DIO_prog.o
                0x000001f6                DIO_u8ReadPortDir
 .text.DIO_u8ReadPinVal
                0x00000244       0x7e ./DIO_prog.o
                0x00000244                DIO_u8ReadPinVal
 .text.DIO_u8WritePinVal
                0x000002c2      0x110 ./DIO_prog.o
                0x000002c2                DIO_u8WritePinVal
 .text.DIO_u8WritePinDir
                0x000003d2      0x110 ./DIO_prog.o
                0x000003d2                DIO_u8WritePinDir
 .text.DIO_u8ReadPinDir
                0x000004e2       0x7e ./DIO_prog.o
                0x000004e2                DIO_u8ReadPinDir
 .text.DIO_voidInit
                0x00000560       0x8a ./DIO_prog.o
                0x00000560                DIO_voidInit
 .text.main     0x000005ea      0x104 ./Main.o
                0x000005ea                main
 .text.PWM_init
                0x000006ee       0x1c ./PWM_prog.o
                0x000006ee                PWM_init
 .text.PWM_Set_Duty_Cycle
                0x0000070a       0x22 ./PWM_prog.o
                0x0000070a                PWM_Set_Duty_Cycle
 .text.TACTILE_voidInit
                0x0000072c        0xe ./TACTILE_prog.o
                0x0000072c                TACTILE_voidInit
 .text.TACTILE_u8GetButtonState
                0x0000073a      0x20c ./TACTILE_prog.o
                0x0000073a                TACTILE_u8GetButtonState
 .text.libgcc   0x00000946        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000946        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000946        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000946                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000946        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000946                exit
                0x00000946                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000946        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000094a                _etext = .

.data           0x00800060       0x2c load address 0x0000094a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DCMotor_prog.o
 .data          0x00800060        0x0 ./DIO_prog.o
 .data          0x00800060        0x0 ./Main.o
 .data          0x00800060        0x0 ./PWM_prog.o
 .data          0x00800060        0x0 ./TACTILE_prog.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.SwitchPinArr
                0x00800060       0x10 ./TACTILE_prog.o
                0x00800060                SwitchPinArr
 *(.rodata)
 *(.rodata*)
 .rodata.DCMotor_ArrayOfSpeeds
                0x00800070        0x3 ./DCMotor_prog.o
 .rodata.DIO_u8PORTArr
                0x00800073        0x8 ./DIO_prog.o
                0x00800073                DIO_u8PORTArr
 .rodata.DIO_u8PINArr
                0x0080007b        0x8 ./DIO_prog.o
                0x0080007b                DIO_u8PINArr
 .rodata.DIO_u8DDRArr
                0x00800083        0x8 ./DIO_prog.o
                0x00800083                DIO_u8DDRArr
 *(.gnu.linkonce.d*)
                0x0080008c                . = ALIGN (0x2)
 *fill*         0x0080008b        0x1 00
                0x0080008c                _edata = .
                0x0080008c                PROVIDE (__data_end, .)

.bss            0x0080008c       0x42
                0x0080008c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080008c        0x0 ./DCMotor_prog.o
 .bss           0x0080008c        0x0 ./DIO_prog.o
 .bss           0x0080008c        0x0 ./Main.o
 .bss           0x0080008c        0x0 ./PWM_prog.o
 .bss           0x0080008c        0x0 ./TACTILE_prog.o
 .bss           0x0080008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.DCMotor_u8Speedflag
                0x0080008c        0x1 ./DCMotor_prog.o
 .bss.ButtonsState
                0x0080008d       0x10 ./TACTILE_prog.o
 .bss.ButtonsPressedFlag
                0x0080009d       0x10 ./TACTILE_prog.o
 .bss.ButtonsLowCounter
                0x008000ad       0x10 ./TACTILE_prog.o
 .bss.ButtonsHighCounter
                0x008000bd       0x10 ./TACTILE_prog.o
 .bss.ButtonVal
                0x008000cd        0x1 ./TACTILE_prog.o
 *(COMMON)
                0x008000ce                PROVIDE (__bss_end, .)
                0x0000094a                __data_load_start = LOADADDR (.data)
                0x00000976                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000ce        0x0
                0x008000ce                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000ce                PROVIDE (__noinit_end, .)
                0x008000ce                _end = .
                0x008000ce                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1140
 *(.stab)
 .stab          0x00000000      0x270 ./DCMotor_prog.o
 .stab          0x00000270      0x7e0 ./DIO_prog.o
                                0x7ec (size before relaxing)
 .stab          0x00000a50      0x2a0 ./Main.o
                                0x330 (size before relaxing)
 .stab          0x00000cf0      0x180 ./PWM_prog.o
                                0x210 (size before relaxing)
 .stab          0x00000e70      0x2d0 ./TACTILE_prog.o
                                0x360 (size before relaxing)

.stabstr        0x00000000      0x840
 *(.stabstr)
 .stabstr       0x00000000      0x840 ./DCMotor_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SWE_APP.elf elf32-avr)
LOAD linker stubs
